name: Terraform-AWS-Ansible
run-name: ${{ github.actor }} Terraform-AWS-Ansible
on: [push]
jobs:
  Terraform-AWS-Ansible:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Terraform and Ansible
        timeout-minutes: 20 
        shell: bash
        env:
          AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID     : ${{ secrets.AWS_ACCESS_KEY_ID }}
          DB_PASSWORD           : ${{ secrets.DB_PASSWORD }}
        run: |
          terraform init
          export AWS_REGION="us-east-1"
          #DB_PASSWORD=$(echo "${{secrets.DB_PASSWORD}}")
          echo "${{ secrets.DB_PASSWORD }}" > pass.txt
          cat pass.txt
          terraform apply -auto-approve -var db_password="test1234"
          terraform output public_ip | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" >> inventory-ansible
          truncate -s-1 inventory-ansible
          mkdir -p ~/.ssh
          touch ~/key
          echo "${{secrets.SSH_PRIVATE_KEY_AWS}}" > ~/key
          sudo chmod 600 ~/key
          cp ~/key ~/.ssh/id_rsa
          echo -n " ansible_user=ubuntu" >> inventory-ansible
          cat inventory-ansible
          terraform output -raw db_instance_address >> db.txt
          cat db.txt
          echo "db_host: " > vars.yaml
          truncate -s-1 vars.yaml
          cat db.txt >> vars.yaml
          echo " " >> vars.yaml
          echo "mysql_password: $DB_PASSWORD" >> vars.yaml
          cat vars.yaml
          ansible-playbook docker-ansible.yaml -i inventory-ansible --ssh-common-args='-o StrictHostKeyChecking=no'  --extra-vars "@vars.yaml"
