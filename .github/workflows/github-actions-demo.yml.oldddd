name: Terraform-AWS-Ansible
run-name: ${{ github.actor }} Terraform-AWS-Ansible
on: [push]
jobs:
  Terraform-AWS-Ansible:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Terraform
        timeout-minutes: 20
        shell: bash
        env:
          AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID     : ${{ secrets.AWS_ACCESS_KEY_ID }}
          DB_PASSWORD           : ${{ env.DB_PASSWORD }}
        run: |
          terraform init
          export AWS_REGION="us-east-1"
          #DB_PASSWORD=$(echo "${{env.DB_PASSWORD}}")
          echo "${{ env.DB_PASSWORD }}" > pass.txt
          cat pass.txt
          terraform apply -auto-approve -var db_password=$DB_PASSWORD
          terraform output public_ip | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" >> inventory-ansible
          truncate -s-1 inventory-ansible
          mkdir -p ~/.ssh
          touch ~/key
          echo "${{secrets.SSH_PRIVATE_KEY_AWS}}" > ~/key
          sudo chmod 600 ~/key
          cp ~/key ~/.ssh/id_rsa
          echo -n " ansible_user=ubuntu" >> inventory-ansible
          cat inventory-ansible
          terraform output -raw db_instance_address >> db.txt
          cat db.txt
          db_host=$(cat db.txt)
      - name: Ansible 
        uses: saubermacherag/ansible-playbook-docker-action@v1.4
        with:
          playbookName: 'docker-ansible.yaml'
          inventoryFile: 'inventory-ansible'
          extraVars: "-e mysql_password=${{ env.DB_PASSWORD }} -e db_host=$db_host"
          keyFile: "~/key"
